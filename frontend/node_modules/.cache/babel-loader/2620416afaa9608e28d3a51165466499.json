{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harry\\\\Desktop\\\\JS\\\\my_projects\\\\mern-app\\\\frontend\\\\src\\\\shared\\\\components\\\\FormElements\\\\ImageUpload.js\";\nimport { useRef, useState, useEffect } from 'react';\nimport './ImageUpload.css';\nimport Button from './Button';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    ref: filePickerRef,\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    accept: \".jpg,.png.,.jpeg\",\n    onChange: pickedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `image-upload ${props.center && 'center'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-upload__preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, previewUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: previewUrl,\n    alt: \"Preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }\n  }), !previewUrl && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }\n  }, \"Please pick an image.\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: pickImageHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"PICK IMAGE\")), !isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }\n  }, props.errorText));\n};\n\nexport default ImageUpload;","map":{"version":3,"sources":["C:/Users/Harry/Desktop/JS/my_projects/mern-app/frontend/src/shared/components/FormElements/ImageUpload.js"],"names":["useRef","useState","useEffect","Button","ImageUpload","props","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickImageHandler","current","click","display","center","errorText"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\n\r\nimport './ImageUpload.css';\r\nimport Button from './Button';\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png.,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"]},"metadata":{},"sourceType":"module"}